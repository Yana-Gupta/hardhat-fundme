{
  "address": "0x353B3Ea03F1ABCEE0f90E547b80a50C8aA6b6719",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUMUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getAddressToAmmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6f9b307c187a4e229b7fba5023537758f6fa7675d1a4e7d944b622c11fc9add0",
  "receipt": {
    "to": null,
    "from": "0x53deA06C7efA484bB9D6a6fc9FB5c2158b5024b7",
    "contractAddress": "0x353B3Ea03F1ABCEE0f90E547b80a50C8aA6b6719",
    "transactionIndex": 96,
    "gasUsed": "995846",
    "logsBloom": "0x
    "blockHash": "0xb145ffb6ef3bcee0c3df318dbb1dc63cab224749f511bef029fbcf88116c8cbb",
    "transactionHash": "0x6f9b307c187a4e229b7fba5023537758f6fa7675d1a4e7d944b622c11fc9add0",
    "logs": [],
    "blockNumber": 8368247,
    "cumulativeGasUsed": "19029390",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
  ],
  "numDeployments": 3,
  "solcInputHash": "2ea1eea84137d4d56e51cf48994b1a16",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUMUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getAddressToAmmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Yana Gupta\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for collecting fund\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"@dev\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n//pragma\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// constant , immutable\\r\\n// Error Code\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n// Libraries / Interfaces / Contracts\\r\\nimport \\\"./PriceConvertor.sol\\\";\\r\\n\\r\\n/** @title A contract for collecting fund\\r\\n * @author Yana Gupta\\r\\n * @notice\\r\\n * @dev\\r\\n */\\r\\n\\r\\ncontract FundMe {\\r\\n  // Type Declaration\\r\\n  using utils for uint256;\\r\\n\\r\\n  uint256 public constant MINIMUMUSD = 1;\\r\\n  address[] public getFunder;\\r\\n  mapping(address => uint256) public getAddressToAmmount;\\r\\n  address public immutable i_owner;\\r\\n  AggregatorV3Interface public getPriceFeed;\\r\\n\\r\\n  constructor(address priceFeedAddress) {\\r\\n    i_owner = msg.sender;\\r\\n    getPriceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n  }\\r\\n\\r\\n  function fund() public payable {\\r\\n    require(\\r\\n      msg.value > MINIMUMUSD.getConversionRate(getPriceFeed),\\r\\n      \\\"DIDN'T SEND ENOUGH.\\\"\\r\\n    );\\r\\n    getFunder.push(msg.sender);\\r\\n    getAddressToAmmount[msg.sender] = msg.value;\\r\\n  }\\r\\n\\r\\n  function withdraw() public onlyOwner {\\r\\n    for (\\r\\n      uint256 funderIndex = 0;\\r\\n      funderIndex < getFunder.length;\\r\\n      funderIndex++\\r\\n    ) {\\r\\n      address funder = getFunder[funderIndex];\\r\\n      getAddressToAmmount[funder] = 0;\\r\\n    }\\r\\n    getFunder = new address[](0);\\r\\n\\r\\n    (bool callSuccess, ) = payable(msg.sender).call{\\r\\n      value: address(this).balance\\r\\n    }(\\\"\\\");\\r\\n\\r\\n    require(callSuccess, \\\"Call Failed\\\");\\r\\n  }\\r\\n\\r\\n  // Making cheaper withdraw function\\r\\n  function cheaperWithdraw() public payable onlyOwner {\\r\\n    address[] memory funders = getFunder;\\r\\n    // mapping cannor be stored in memory\\r\\n    for (\\r\\n      uint256 funderIndex = 0;\\r\\n      funderIndex < funders.length;\\r\\n      funderIndex++\\r\\n    ) {\\r\\n      address funder = funders[funderIndex];\\r\\n      getAddressToAmmount[funder] = 0;\\r\\n    }\\r\\n\\r\\n    getFunder = new address[](0);\\r\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n    require(success);\\r\\n  } \\r\\n\\r\\n  receive() external payable {\\r\\n    fund();\\r\\n  }\\r\\n\\r\\n  fallback() external payable {\\r\\n    fund();\\r\\n  }\\r\\n\\r\\n  modifier onlyOwner() {\\r\\n    if (msg.sender != i_owner) {\\r\\n      revert FundMe__NotOwner();\\r\\n    }\\r\\n    _;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x2a35d2aa5f9e0ef84ef146e9405e2d15ccd060099040084e9b0e5c0c97e7468c\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary utils { \\r\\n    function ethToUSD(\\r\\n        AggregatorV3Interface PriceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        (, int256 price, , , ) = PriceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 dollarAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        return ((dollarAmount * 1e36) / ethToUSD(priceFeed));\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfc00692e8028335e27edf9219790d8fa7071ef45a7ba940906973ba34cdc56dd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200122c3803806200122c833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110a662000186600039600081816102f80152818161056301528181610759015261083001526110a66000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063be2693f01461014c578063d7b4750c14610156578063dba6335f146101935761008e565b806338f9c2df146100985780633ccfd60b146100d55780637d451480146100ec5780639e87a5cd146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a34565b6102de565b6040516100cc9190610a7a565b60405180910390f35b3480156100e157600080fd5b506100ea6102f6565b005b3480156100f857600080fd5b50610101610536565b60405161010e9190610a7a565b60405180910390f35b34801561012357600080fd5b5061012c61053b565b6040516101399190610af4565b60405180910390f35b61014a6101be565b005b610154610561565b005b34801561016257600080fd5b5061017d60048036038101906101789190610b3b565b6107ef565b60405161018a9190610b77565b60405180910390f35b34801561019f57600080fd5b506101a861082e565b6040516101b59190610b77565b60405180910390f35b6101f4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600161085290919063ffffffff16565b3411610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c90610bef565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104265760008082815481106103a05761039f610c0f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041e90610c6d565b91505061037e565b50600067ffffffffffffffff81111561044257610441610cb6565b5b6040519080825280602002602001820160405280156104705781602001602082028036833780820191505090505b506000908051906020019061048692919061092a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ad90610d16565b60006040518083038185875af1925050503d80600081146104ea576040519150601f19603f3d011682016040523d82523d6000602084013e6104ef565b606091505b5050905080610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a90610d77565b60405180910390fd5b50565b600181565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561066957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161061f575b5050505050905060005b81518110156106f457600082828151811061069157610690610c0f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106ec90610c6d565b915050610673565b50600067ffffffffffffffff8111156107105761070f610cb6565b5b60405190808252806020026020018201604052801561073e5781602001602082028036833780820191505090505b506000908051906020019061075492919061092a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161079b90610d16565b60006040518083038185875af1925050503d80600081146107d8576040519150601f19603f3d011682016040523d82523d6000602084013e6107dd565b606091505b50509050806107eb57600080fd5b5050565b600081815481106107ff57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061085d8261088a565b6ec097ce7bc90715b34b9f1000000000846108789190610d97565b6108829190610e20565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108d357600080fd5b505afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b9190610ede565b5050509150506402540be400816109229190610f59565b915050919050565b8280548282559060005260206000209081019282156109a3579160200282015b828111156109a25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061094a565b5b5090506109b091906109b4565b5090565b5b808211156109cd5760008160009055506001016109b5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a01826109d6565b9050919050565b610a11816109f6565b8114610a1c57600080fd5b50565b600081359050610a2e81610a08565b92915050565b600060208284031215610a4a57610a496109d1565b5b6000610a5884828501610a1f565b91505092915050565b6000819050919050565b610a7481610a61565b82525050565b6000602082019050610a8f6000830184610a6b565b92915050565b6000819050919050565b6000610aba610ab5610ab0846109d6565b610a95565b6109d6565b9050919050565b6000610acc82610a9f565b9050919050565b6000610ade82610ac1565b9050919050565b610aee81610ad3565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b610b1881610a61565b8114610b2357600080fd5b50565b600081359050610b3581610b0f565b92915050565b600060208284031215610b5157610b506109d1565b5b6000610b5f84828501610b26565b91505092915050565b610b71816109f6565b82525050565b6000602082019050610b8c6000830184610b68565b92915050565b600082825260208201905092915050565b7f4449444e27542053454e4420454e4f5547482e00000000000000000000000000600082015250565b6000610bd9601383610b92565b9150610be482610ba3565b602082019050919050565b60006020820190508181036000830152610c0881610bcc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7882610a61565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cab57610caa610c3e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d00600083610ce5565b9150610d0b82610cf0565b600082019050919050565b6000610d2182610cf3565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610d61600b83610b92565b9150610d6c82610d2b565b602082019050919050565b60006020820190508181036000830152610d9081610d54565b9050919050565b6000610da282610a61565b9150610dad83610a61565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de657610de5610c3e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2b82610a61565b9150610e3683610a61565b925082610e4657610e45610df1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7081610e51565b8114610e7b57600080fd5b50565b600081519050610e8d81610e67565b92915050565b6000819050919050565b610ea681610e93565b8114610eb157600080fd5b50565b600081519050610ec381610e9d565b92915050565b600081519050610ed881610b0f565b92915050565b600080600080600060a08688031215610efa57610ef96109d1565b5b6000610f0888828901610e7e565b9550506020610f1988828901610eb4565b9450506040610f2a88828901610ec9565b9350506060610f3b88828901610ec9565b9250506080610f4c88828901610e7e565b9150509295509295909350565b6000610f6482610e93565b9150610f6f83610e93565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fae57610fad610c3e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610feb57610fea610c3e565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561102857611027610c3e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561106557611064610c3e565b5b82820290509291505056fea264697066735822122003fac67c1f8349dd108b8008e21441ad0c0d43ef703ac19c2c70e3f71ce2726c64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063be2693f01461014c578063d7b4750c14610156578063dba6335f146101935761008e565b806338f9c2df146100985780633ccfd60b146100d55780637d451480146100ec5780639e87a5cd146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a34565b6102de565b6040516100cc9190610a7a565b60405180910390f35b3480156100e157600080fd5b506100ea6102f6565b005b3480156100f857600080fd5b50610101610536565b60405161010e9190610a7a565b60405180910390f35b34801561012357600080fd5b5061012c61053b565b6040516101399190610af4565b60405180910390f35b61014a6101be565b005b610154610561565b005b34801561016257600080fd5b5061017d60048036038101906101789190610b3b565b6107ef565b60405161018a9190610b77565b60405180910390f35b34801561019f57600080fd5b506101a861082e565b6040516101b59190610b77565b60405180910390f35b6101f4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600161085290919063ffffffff16565b3411610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c90610bef565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104265760008082815481106103a05761039f610c0f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041e90610c6d565b91505061037e565b50600067ffffffffffffffff81111561044257610441610cb6565b5b6040519080825280602002602001820160405280156104705781602001602082028036833780820191505090505b506000908051906020019061048692919061092a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ad90610d16565b60006040518083038185875af1925050503d80600081146104ea576040519150601f19603f3d011682016040523d82523d6000602084013e6104ef565b606091505b5050905080610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a90610d77565b60405180910390fd5b50565b600181565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561066957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161061f575b5050505050905060005b81518110156106f457600082828151811061069157610690610c0f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106ec90610c6d565b915050610673565b50600067ffffffffffffffff8111156107105761070f610cb6565b5b60405190808252806020026020018201604052801561073e5781602001602082028036833780820191505090505b506000908051906020019061075492919061092a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161079b90610d16565b60006040518083038185875af1925050503d80600081146107d8576040519150601f19603f3d011682016040523d82523d6000602084013e6107dd565b606091505b50509050806107eb57600080fd5b5050565b600081815481106107ff57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061085d8261088a565b6ec097ce7bc90715b34b9f1000000000846108789190610d97565b6108829190610e20565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108d357600080fd5b505afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b9190610ede565b5050509150506402540be400816109229190610f59565b915050919050565b8280548282559060005260206000209081019282156109a3579160200282015b828111156109a25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061094a565b5b5090506109b091906109b4565b5090565b5b808211156109cd5760008160009055506001016109b5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a01826109d6565b9050919050565b610a11816109f6565b8114610a1c57600080fd5b50565b600081359050610a2e81610a08565b92915050565b600060208284031215610a4a57610a496109d1565b5b6000610a5884828501610a1f565b91505092915050565b6000819050919050565b610a7481610a61565b82525050565b6000602082019050610a8f6000830184610a6b565b92915050565b6000819050919050565b6000610aba610ab5610ab0846109d6565b610a95565b6109d6565b9050919050565b6000610acc82610a9f565b9050919050565b6000610ade82610ac1565b9050919050565b610aee81610ad3565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b610b1881610a61565b8114610b2357600080fd5b50565b600081359050610b3581610b0f565b92915050565b600060208284031215610b5157610b506109d1565b5b6000610b5f84828501610b26565b91505092915050565b610b71816109f6565b82525050565b6000602082019050610b8c6000830184610b68565b92915050565b600082825260208201905092915050565b7f4449444e27542053454e4420454e4f5547482e00000000000000000000000000600082015250565b6000610bd9601383610b92565b9150610be482610ba3565b602082019050919050565b60006020820190508181036000830152610c0881610bcc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7882610a61565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cab57610caa610c3e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d00600083610ce5565b9150610d0b82610cf0565b600082019050919050565b6000610d2182610cf3565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610d61600b83610b92565b9150610d6c82610d2b565b602082019050919050565b60006020820190508181036000830152610d9081610d54565b9050919050565b6000610da282610a61565b9150610dad83610a61565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de657610de5610c3e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2b82610a61565b9150610e3683610a61565b925082610e4657610e45610df1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7081610e51565b8114610e7b57600080fd5b50565b600081519050610e8d81610e67565b92915050565b6000819050919050565b610ea681610e93565b8114610eb157600080fd5b50565b600081519050610ec381610e9d565b92915050565b600081519050610ed881610b0f565b92915050565b600080600080600060a08688031215610efa57610ef96109d1565b5b6000610f0888828901610e7e565b9550506020610f1988828901610eb4565b9450506040610f2a88828901610ec9565b9350506060610f3b88828901610ec9565b9250506080610f4c88828901610e7e565b9150509295509295909350565b6000610f6482610e93565b9150610f6f83610e93565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fae57610fad610c3e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610feb57610fea610c3e565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561102857611027610c3e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561106557611064610c3e565b5b82820290509291505056fea264697066735822122003fac67c1f8349dd108b8008e21441ad0c0d43ef703ac19c2c70e3f71ce2726c64736f6c63430008080033",
  "devdoc": {
    "author": "Yana Gupta",
    "kind": "dev",
    "methods": {},
    "title": "A contract for collecting fund",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "@dev",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "getFunder",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "getAddressToAmmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "getPriceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}